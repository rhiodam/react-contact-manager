{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/tests/LifecycleMethodTest.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","res","contacts2","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","onShowClick","e","showContactInfo","onDeleteClick","_ref","delete","t0","_x","_x2","_this2","_this$props$contact","name","phone","email","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","LifecycleMethodTest","title","body","console","log","fetch","then","response","json","prevProps","prevState","snapshot","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","address","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.301aa1b4.chunk.js","sourcesContent":["// Provider in redux\r\nimport React, {Component} from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n\r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload , ...state.contacts]\r\n            };\r\n\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact =>\r\n                        contact.id === action.payload.id\r\n                            ? (contact = action.payload)\r\n                            : contact\r\n                )\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    // <!--  -->\r\n    state = {\r\n        res :{},\r\n        contacts : [],\r\n        contacts2: [\r\n            // {\r\n            //     id: 1,\r\n            //     name: \"Rhioda Muthie\",\r\n            //     email: \"rhioda.muthie@gmail.com\",\r\n            //     phone: \"085271062544\",\r\n            //     age: 24,\r\n            //     address : \"Tebet barat dalam\"\r\n            // },\r\n            // {\r\n            // {\r\n                //     id: 2,\r\n                //     name: \"Fitya Fikriyah\",\r\n                //     email: \"fifislk@gmail.com\",\r\n                //     phone: \"081266698197\",\r\n                //     age: 23,\r\n                //     address : \"Pinang xxx\"\r\n                // },\r\n            //     id: 3,\r\n            //     name: \"Rhioda Muthie\",\r\n            //     email: \"rhioda.muthie@gmail.com\",\r\n            //     phone: \"085271062544\",\r\n            //     age: 24,\r\n            //     address : \"Tebet barat dalam\"\r\n            // }\r\n            // ,\r\n            // {\r\n            //     id: 4,\r\n            //     name: \"Fitya Fikriyah\",\r\n            //     email: \"fifislk@gmail.com\",\r\n            //     phone: \"081266698197\",\r\n            //     age: 23,\r\n            //     address : \"Pinang xxx\"\r\n            // }\r\n        ],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action));\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios\r\n            .get('https://jsonplaceholder.typicode.com/users');\r\n            // .then(res => console.log(res))\r\n            // // .then(res => console.log(res.data))\r\n            // .then(res => this.setState({contacts : res.data} ))\r\n            // // .then(json => console.log(json)))\r\n            // .then(res=>this.setState({res:res}))\r\n        // console.log(this.state.contacts)\r\n        // console.log(res)\r\n        this.setState({contacts : res.data} );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {Consumer} from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showContactInfo: true\r\n        };\r\n    }\r\n\r\n    // state = {\r\n    //   showContactInfo: true\r\n    // };\r\n    onShowClick = e => {\r\n        // console.log(\"Hello World\");\r\n        // console.log(this.state);\r\n        // console.log(e.target);\r\n        this.setState({showContactInfo: !this.state.showContactInfo});\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        // console.log(\"Hello World\");\r\n        // this.props.deleteClickHandler();\r\n        try {\r\n            await axios\r\n                .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: \"DELETE_CONTACT\", payload: id});\r\n        } catch (e) {\r\n            dispatch({type: \"DELETE_CONTACT\", payload: id});\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        //  destructuring\r\n        // const { name, age, phone } = this.props;\r\n        const {id, name, phone, email} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        // const deleteClickHandler = this.props;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}{\" \"}\r\n                                <i\r\n                                    onClick={this.onShowClick}\r\n                                    className=\"fa fa-sort-down\"\r\n                                    style={{cursor: \"pointer\"}}\r\n                                />\r\n                                <i\r\n                                    className=\"fas fa-times\"\r\n                                    style={{cursor: \"pointer\", float: \"right\", color: \"red\"}}\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                />\r\n                                \r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor:'pointer',\r\n                                            float:'right',\r\n                                            color:'black',\r\n                                            marginRight:'1rem'\r\n                                        }}\r\n                                    >\r\n\r\n                                    </i>\r\n                                </Link>\r\n                            </h4>\r\n                            {/* <h4>{contact.name}</h4> */}\r\n                            {/* to toggle the contact detail */}\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    {/* <li className=\"list-group-item\">Email : rhioda.muthie@gmail.com</li>\r\n          <li className=\"list-group-item\">Phone : {phone}</li>\r\n          <li className=\"list-group-item\">Age : {age}</li>\r\n          <li className=\"list-group-item\">Address : Tebet barat dalam</li> */}\r\n                                    {/* using contact */}\r\n                                    {/* <li className=\"list-group-item\">Email : {contact.email}</li>\r\n          <li className=\"list-group-item\">Phone : {contact.phone}</li>\r\n          <li className=\"list-group-item\">Age : {contact.age}</li> */}\r\n\r\n                                    <li className=\"list-group-item\">Name : {name}</li>\r\n                                    <li className=\"list-group-item\">Email : {email}</li>\r\n                                    <li className=\"list-group-item\">Phone : {phone}</li>\r\n                                    {/*<li className=\"list-group-item\">Age : {age}</li>*/}\r\n                                    {/*<li className=\"list-group-item\">Address : {address2} </li>*/}\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n\r\n            //   <div>\r\n            //     <h4>Rhioda Muthie</h4>\r\n            //     <ul>\r\n            //       <li>Email : rhioda.muthie@gmail.com</li>\r\n            //       <li>Phone : 085271062544</li>\r\n            //       <li>Age : 24</li>\r\n            //       <li>Address : Tebet barat dalam</li>\r\n            //     </ul>\r\n            //   </div>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    // name: PropTypes.string.isRequired,\r\n    // age: PropTypes.string.isRequired,\r\n    // phone: PropTypes.string.isRequired\r\n    contact: PropTypes.object.isRequired\r\n    // deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","// rcc\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\n//component\r\nimport Contact from \"./Contact\";\r\n\r\nclass Contacts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  // deleteContact = id => {\r\n  //   // console.log(123);\r\n  //   const { contacts } = this.state;\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\r\n  //   this.setState({\r\n  //     contacts: newContacts\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n\r\n              // Gantiin tag div yang cuma bisa satu bisa ga banyak div\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  // deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n            )\r\n        }}\r\n      </Consumer>\r\n\r\n    )\r\n\r\n    // const { contacts } = this.state;\r\n\r\n    // // return <div>{contacts.map}</div>;\r\n    // return (\r\n    //   <React.Fragment>\r\n    //     {/* <div> */}\r\n    //     {/* // High order function */}\r\n    //     {contacts.map(contact => (\r\n    //       // test\r\n    //       // <h1>{contact.name}</h1>\r\n    //       <Contact\r\n    //         key={contact.id}\r\n    //         // name={contact.name}\r\n    //         // email={contact.email}\r\n    //         // phone={contact.phone}\r\n\r\n    //         // send to prop all of it\r\n    //         // rather than 1 by 1\r\n    //         contact={contact}\r\n    //         deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n    //       />\r\n    //     ))}\r\n    //     {/* </div> */}\r\n    //   </React.Fragment>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../contacts/contact.css\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    // <div>\r\n    //   {/* coz this is functional component we accesses it by props. */}\r\n    //   {/* this way */}\r\n    //   {/* <h1 style={{ color: \"red\" , fontSize : '18' }}>{branding}</h1> */}\r\n    //   {/* or this way */}\r\n    //   <h1 style={headingStyle}>{branding}</h1>\r\n    // </div>\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>\r\n                About\r\n              </Link>\r\n            </li>\r\n            {/*<li>*/}\r\n              {/*<a href=\"\" className=\"nav-link\">*/}\r\n                {/*About*/}\r\n              {/*</a>*/}\r\n            {/*</li>*/}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = { branding: \"My Apps\" };\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//   color: \"green\",\r\n//   fontSize: \"20\"\r\n// };\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">About Contact Manager</h1>\r\n                <p className=\"lead\">\r\n                    Simple app to save contact\r\n                </p>\r\n                <p className=\"text-secondary\">\r\n                    Version 1.0.0\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">\r\n                    <span className=\"text-danger\">404 </span> Page not found</h1>\r\n                <p className=\"lead\">Sorry, that page did not exists</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\n\r\nclass LifecycleMethodTest extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('LifecycleMethodTest... componentDidMount')\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(res =>\r\n                this.setState({\r\n                    title: res.title,\r\n                    body: res.body\r\n                })\r\n            )\r\n    }\r\n\r\n    // 1\r\n    componentWillMount() {\r\n        console.log('LifecycleMethodTest... componentWillMount')\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('LifecycleMethodTest... componentDidUpdate')\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log('LifecycleMethodTest... getSnapshotBeforeUpdate')\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>LifecycleMethodTest Component</h1>\r\n                <h2>Post</h2>\r\n                <p>{this.state.title}</p>\r\n                <p>{this.state.body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LifecycleMethodTest;","import React, {} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n                            label,\r\n                            name,\r\n                            value,\r\n                            placeholder,\r\n                            type,\r\n                            onChange,\r\n                            error\r\n                        }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                // className=\"form-control form-control-lg\"\r\n                className={classnames('form-control form-control-lg',{\r\n                    'is-invalid' : error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n\r\n            />\r\n            {/*Bootstrap class for error*/}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error : PropTypes.string\r\n};\r\n\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\nexport default TextInputGroup;","import React, {Component} from \"react\";\r\nimport {Consumer} from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nexport default class AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        errors : {}\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n     onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        const {name, email, phone, address} = this.state;\r\n\r\n        // Check for errors\r\n        // Urutan berpengaruh pas pengecekan wkwkwk\r\n        if(name === ''){\r\n            this.setState({errors : {name : 'Name is required'}});\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({errors : {email : 'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone === ''){\r\n            this.setState({errors : {phone : 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        // if(address === ''){\r\n        //     this.setState({errors : {address : 'Address is required'}});\r\n        //     return;\r\n        // }\r\n\r\n        // New Contact object\r\n        const newContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n            // ,address\r\n        };\r\n\r\n        const res = await axios.post(\r\n            'https://jsonplaceholder.typicode.com/users',\r\n            newContact\r\n        );\r\n\r\n        // dispatch to context\r\n        dispatch({type: \"ADD_CONTACT\", payload: res.data});\r\n\r\n        // Clear the state\r\n        this.setState({\r\n            // name: \"\",\r\n            // email: \"\",\r\n            // phone: \"\",\r\n            // address: \"\",\r\n            errors : {}\r\n        });\r\n\r\n        // send to the contact list component\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name, email, phone ,errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">New Contact</div>\r\n\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                    {/*<label htmlFor=\"name\">Name</label>*/}\r\n                                    {/*<input*/}\r\n                                    {/*type=\"text\"*/}\r\n                                    {/*name=\"name\"*/}\r\n                                    {/*className=\"form-control form-control-lg\"*/}\r\n                                    {/*placeholder=\"Enter Name...\"*/}\r\n                                    {/*value={name}*/}\r\n                                    {/*onChange={this.onChange}*/}\r\n                                    {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                        placeholder=\"Enter Name...\"\r\n                                        name=\"name\"\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        onChange={this.onChange}\r\n                                        value={email}\r\n                                        type={email}\r\n                                        placeholder=\"Enter Email...\"\r\n                                        name=\"email\"\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        onChange={this.onChange}\r\n                                        value={phone}\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        name=\"phone\"\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                        {/*<label htmlFor=\"email\">Email</label>*/}\r\n                                        {/*<input*/}\r\n                                            {/*type=\"email\"*/}\r\n                                            {/*name=\"email\"*/}\r\n                                            {/*className=\"form-control form-control-lg\"*/}\r\n                                            {/*placeholder=\"Enter Email...\"*/}\r\n                                            {/*value={email}*/}\r\n                                            {/*onChange={this.onChange}*/}\r\n                                        {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                        {/*<label htmlFor=\"phone\">Phone</label>*/}\r\n                                        {/*<input*/}\r\n                                            {/*type=\"text\"*/}\r\n                                            {/*name=\"phone\"*/}\r\n                                            {/*className=\"form-control form-control-lg\"*/}\r\n                                            {/*placeholder=\"Enter Phone...\"*/}\r\n                                            {/*value={phone}*/}\r\n                                            {/*onChange={this.onChange}*/}\r\n                                        {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                        {/*<label htmlFor=\"address\">Address</label>*/}\r\n                                        {/*<input*/}\r\n                                            {/*type=\"text\"*/}\r\n                                            {/*name=\"address\"*/}\r\n                                            {/*className=\"form-control form-control-lg\"*/}\r\n                                            {/*placeholder=\"Enter Address...\"*/}\r\n                                            {/*value={address}*/}\r\n                                            {/*onChange={this.onChange}*/}\r\n                                        {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                            {/* <h3>Add Contact</h3> */}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Consumer} from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        const {name, email, phone, address} = this.state;\r\n\r\n        // Check for errors\r\n        // Urutan berpengaruh pas pengecekan wkwkwk\r\n        if (name === '') {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        // if(address === ''){\r\n        //     this.setState({errors : {address : 'Address is required'}});\r\n        //     return;\r\n        // }\r\n\r\n        // New Contact object\r\n        const updContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n            // ,address\r\n        };\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`,\r\n            updContact\r\n        );\r\n\r\n        // dispatch to context\r\n        dispatch({type: \"UPDATE_CONTACT\", payload: res.data});\r\n\r\n        // Clear the state\r\n        this.setState({\r\n            // name: \"\",\r\n            // email: \"\",\r\n            // phone: \"\",\r\n            // address: \"\",\r\n            errors: {}\r\n        });\r\n\r\n        // send to the contact list component\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                    {/*<label htmlFor=\"name\">Name</label>*/}\r\n                                    {/*<input*/}\r\n                                    {/*type=\"text\"*/}\r\n                                    {/*name=\"name\"*/}\r\n                                    {/*className=\"form-control form-control-lg\"*/}\r\n                                    {/*placeholder=\"Enter Name...\"*/}\r\n                                    {/*value={name}*/}\r\n                                    {/*onChange={this.onChange}*/}\r\n                                    {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                        placeholder=\"Enter Name...\"\r\n                                        name=\"name\"\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        onChange={this.onChange}\r\n                                        value={email}\r\n                                        type={email}\r\n                                        placeholder=\"Enter Email...\"\r\n                                        name=\"email\"\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        onChange={this.onChange}\r\n                                        value={phone}\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        name=\"phone\"\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                    {/*<label htmlFor=\"email\">Email</label>*/}\r\n                                    {/*<input*/}\r\n                                    {/*type=\"email\"*/}\r\n                                    {/*name=\"email\"*/}\r\n                                    {/*className=\"form-control form-control-lg\"*/}\r\n                                    {/*placeholder=\"Enter Email...\"*/}\r\n                                    {/*value={email}*/}\r\n                                    {/*onChange={this.onChange}*/}\r\n                                    {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                    {/*<label htmlFor=\"phone\">Phone</label>*/}\r\n                                    {/*<input*/}\r\n                                    {/*type=\"text\"*/}\r\n                                    {/*name=\"phone\"*/}\r\n                                    {/*className=\"form-control form-control-lg\"*/}\r\n                                    {/*placeholder=\"Enter Phone...\"*/}\r\n                                    {/*value={phone}*/}\r\n                                    {/*onChange={this.onChange}*/}\r\n                                    {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                    {/*<label htmlFor=\"address\">Address</label>*/}\r\n                                    {/*<input*/}\r\n                                    {/*type=\"text\"*/}\r\n                                    {/*name=\"address\"*/}\r\n                                    {/*className=\"form-control form-control-lg\"*/}\r\n                                    {/*placeholder=\"Enter Address...\"*/}\r\n                                    {/*value={address}*/}\r\n                                    {/*onChange={this.onChange}*/}\r\n                                    {/*/>*/}\r\n                                    {/*</div>*/}\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Edit Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                            {/* <h3>Add Contact</h3> */}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\n// import Contact from \"./components/Contact\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport Header from \"./components/layout/Header\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport LifecycleMethodTest from \"./components/tests/LifecycleMethodTest\";\r\n// import LikeDislike from \"./components/test/LikeDislike\";\r\n// import Like from \"./components/test/Like\";\r\n// import Counter from \"./components/test/Counter\";\r\n// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport {Provider} from \"./context\";\r\n\r\n// Bootstrap\r\n// import \"./bootstrap/dist/css/boostrap.min.css\";\r\n// import \"bootstrap/dist/css/boostrap.min.css\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n// import bootstrap from \"bootstrap\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider>\r\n                <Router>\r\n                {/*<Router basename={process.env.PUBLIC_URL}>*/}\r\n                    <div className=\"App\">\r\n                        {/* <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header> */}\r\n                        {/* sending branding props to header component */}\r\n                        <Header branding=\"Contact Manager\"/>\r\n\r\n                        <div className=\"container\">\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={Contacts}/>\r\n                                <Route exact path=\"/about\" component={About}/>\r\n                                <Route exact path=\"/contact/add\" component={AddContact}/>\r\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\r\n                                <Route exact path=\"/test\" component={LifecycleMethodTest}/>\r\n                                <Route component={NotFound}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// https://blog.logrocket.com/how-to-use-bootstrap-with-react-a354715d1121\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}